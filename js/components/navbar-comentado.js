// ARCHIVO: navbar.js - Componente de navegaci√≥n reutilizable
// Este archivo crea din√°micamente la barra de navegaci√≥n en todas las p√°ginas
// Funcionalidades:
// - Creaci√≥n din√°mica del HTML del navbar
// - Detecci√≥n de p√°gina activa para highlighting
// - Sincronizaci√≥n con el carrito de compras
// - Responsive design con men√∫ m√≥vil

// FUNCI√ìN PRINCIPAL: Crear y insertar navbar
const createNavbar = () => {
  // Busca el contenedor donde se insertar√° el navbar
  const navbarContainer = document.getElementById("navbar-container");

  // Si no existe el contenedor, termina la ejecuci√≥n
  if (!navbarContainer) return;

  // DETECCI√ìN DE P√ÅGINA ACTIVA
  // Obtiene el nombre del archivo actual para resaltar el enlace correspondiente
  const currentPage = window.location.pathname.split("/").pop() || "index.html";

  // TEMPLATE HTML DEL NAVBAR
  // Crea la estructura completa de la navegaci√≥n
  const navbarHTML = `
    <nav class="navbar">
      <div class="container navbar-container">
        <!-- LOGO -->
        <a href="./index.html" class="navbar-logo">
          <img src="/images/AspenLogoWhite.webp" alt="Aspen Snowmass Logo">
        </a>
        
        <!-- BOT√ìN MEN√ö M√ìVIL -->
        <button class="mobile-menu-btn">‚ò∞</button>
        
        <!-- ENLACES DE NAVEGACI√ìN -->
        <div class="navbar-links">
          <!-- Cada enlace verifica si es la p√°gina actual para agregar clase 'active' -->
          <a href="./index.html" class="${
            currentPage === "index.html" ? "active" : ""
          }">Home</a>
          <a href="./mountains.html" class="${
            currentPage === "mountains.html" ? "active" : ""
          }">Mountains</a>
          <a href="./book-rent.html" class="${
            currentPage === "book-rent.html" ? "active" : ""
          }">Book & Rent</a>
          <a href="./discover.html" class="${
            currentPage === "discover.html" ? "active" : ""
          }">About Us</a>
          
          <!-- √çCONO DEL CARRITO -->
          <a href="./book-rent.html" class="cart-icon">
            üõí <span class="cart-count" style="display: none;">0</span>
          </a>
        </div>
      </div>
    </nav>
  `;

  // INSERCI√ìN DEL HTML
  // Inyecta el navbar en el contenedor
  navbarContainer.innerHTML = navbarHTML;

  // SINCRONIZACI√ìN CON EL CARRITO
  // Actualiza el contador del carrito desde localStorage
  const cartData = JSON.parse(localStorage.getItem("aspenCart")) || [];
  
  // Calcula el total de items en el carrito
  const cartCount = cartData.reduce((total, item) => total + item.quantity, 0);
  
  // Obtiene referencia al elemento contador
  const cartCountElement = document.querySelector(".cart-count");

  // Si hay items en el carrito, muestra el contador
  if (cartCountElement && cartCount > 0) {
    cartCountElement.textContent = cartCount;
    cartCountElement.style.display = "flex"; // Hace visible el badge
  }
};

// EJECUCI√ìN AUTOM√ÅTICA
// Llama a la funci√≥n inmediatamente cuando se carga el script
createNavbar();

// NOTAS T√âCNICAS:

// VENTAJAS DE ESTE ENFOQUE:
// 1. Consistencia: El mismo navbar en todas las p√°ginas
// 2. Mantenibilidad: Un solo lugar para cambios
// 3. Sincronizaci√≥n: Contador de carrito siempre actualizado
// 4. Flexibilidad: F√°cil agregar/quitar enlaces

// DETECCI√ìN DE P√ÅGINA ACTIVA:
// - Usa window.location.pathname para obtener la URL actual
// - Extrae solo el nombre del archivo (ej: "mountains.html")
// - Aplica clase CSS 'active' al enlace correspondiente

// INTEGRACI√ìN CON CARRITO:
// - Lee datos del localStorage al crear el navbar
// - Calcula total de items autom√°ticamente
// - Muestra/oculta el badge seg√∫n la cantidad

// RESPONSIVE DESIGN:
// - Incluye bot√≥n hamburguesa para m√≥viles
// - Los estilos CSS manejan la visibilidad seg√∫n el viewport
// - JavaScript en main.js maneja la funcionalidad del men√∫ m√≥vil